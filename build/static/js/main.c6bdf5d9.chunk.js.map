{"version":3,"sources":["main/greeting/GreetingTitle.js","main/greeting/GreetingContent.js","main/greeting/Greeting.js","main/trending/TrendingHead.js","common/item/PersonItem.js","common/item/JobItem.js","modules/renderHelper.js","common/TypeChanger.js","common/item/ItemCardGroup.js","main/trending/Trending.js","main/Main.js","modules/LayoutModule.js","layout/header/collapse/SearchForm.js","layout/header/collapse/PersonDropdownItem.js","modules/apiCaller.js","layout/header/collapse/CollapseMenu.js","hooks/CustomHooks.js","layout/header/Header.js","layout/footer/Footer.js","common/item/MbtiItem.js","mbti/list/MbtiList.js","mbti/get/MbtiGetTitle.js","mbti/get/MbtiGetBox.js","mbti/get/MbtiGet.js","modules/urlGenerator.js","common/Page.js","common/list/ListFoot.js","common/select/SortSelect.js","common/list/ListHead.js","modules/queryExtractor.js","person/list/PersonList.js","context/ContextContainer.js","vote/VoteForm.js","modal/register/SuccessModal.js","modal/register/ErrorModal.js","modal/register/LoadingModal.js","modal/DeleteModal.js","common/get/GetHead.js","vote/VoteChart.js","comment/CommentList.js","modal/CommentRegisterModal.js","comment/CommentBottom.js","comment/Comment.js","person/get/PersonGet.js","job/list/JobList.js","job/get/JobGet.js","common/register/ImageForm.js","category/list/CategoryList.js","common/register/ExistsWarning.js","common/register/TextTooLongWarning.js","person/register/PersonRegisterForm.js","job/register/JobRegisterForm.js","modal/warning/FillAllModal.js","common/register/Register.js","common/RouteConatiner.js","layout/Layout.js","layout/LayoutContainer.js","App.js","reportWebVitals.js","modules/modules.js","index.js"],"names":["GreetingTitle","Alert","Heading","className","React","Component","GreetingContent","Greeting","variant","TrendingHead","type","style","fontWeight","person","job","to","Button","size","PersonItem","id","Card","Body","src","filename","Title","name","Text","category","mbti","likes","views","JobItem","title","Icon","icon","SpinningIcon","useState","speed","animation","element","text","display","justifyContent","alignItems","flexDirection","width","height","padding","fontSize","Loading","faSpinner","Error","msg","error","toString","includes","faExclamationCircle","NotFound","NotFound404","renderAfterApiCall","items","loading","NoItemFound","textAlign","changeTypeToKorean","ItemCardGroup","itemList","length","CardGroup","map","item","toPersonItemList","toJobItemList","Trending","Main","persons","setPersons","jobs","setJobs","setLoading","setError","useEffect","a","urlSuffix","axios","get","personResponse","jobResponse","data","fetchItems","SET_CHILDREN","initialState","children","SearchForm","keyword","setKeyword","setType","handleClick","url","window","location","href","Form","onKeyPress","e","key","preventDefault","Select","defaultValue","onChange","target","value","FormControl","placeholder","bg","onClick","memo","PersonDropdownItem","baseUrl","NavDropdown","Item","setItem","handleRequest","comment","fetchOne","fetchVotes","itemId","setValue","mbtiVotes","total","available","response","mbtiCountGetDtos","console","log","deleteFile","delete","request","functions","dataString","CollapseMenu","setData","useFetchOne","Navbar","Collapse","Nav","maxHeight","navbarScroll","Link","Header","expand","Brand","Toggle","Footer","margin","color","faGithub","mbtiText","INTJ","INTP","ENTJ","ENTP","INFJ","INFP","ENFJ","ENFP","ISTJ","ISFJ","ESTJ","ESFJ","ISTP","ISFP","ESTP","ESFP","NONE","DRAW","MbtiItem","MbtiList","mbtis","setMbtis","MbtiElements","toUpperCase","MbtiGetTitle","mbtiName","MbtiGetBox","MbtiGet","match","params","createListUrlWithQuery","search","parsed","qs","parse","ignoreQueryPrefix","page","sort","dir","filterBy","createQueryWithCondition","forWhat","object","URL","searchParams","set","pathname","PageButton","number","curr","setPage","Pagination","active","Page","setTotal","fetch","prev","last","Math","ceil","start","realLast","next","makePage","PageButtonList","pages","i","push","Prev","Next","ListFoot","CommentSelect","updateDate","ItemSelect","createDate","SortSelect","handleChange","split","extSort","extDir","ListHead","extractProperties","PersonList","extPage","VoteChartContext","createContext","Provider","ContextConsumer","Consumer","ContextProvider","state","actions","setState","this","props","VoteCheckModal","show","setShow","handleVote","Modal","VoteFormElement","isRendered","selectedMbti","setSelectedMbti","alert","post","createMbtiOptions","disabled","VoteForm","SuccessModal","suffix","history","back","reload","RegisterSuccessModal","RegisterLoadingModal","DeleteModal","password","form","setForm","done","setDone","handleClose","requestDelete","onHide","closeButton","LoadingModal","ErrorModal","PersonHead","writer","JobHead","GetHead","setLikes","setAvailable","setIsRendered","postToServer","handleLike","buttons","Element","options","scales","yAxes","ticks","beginAtZero","VoteChartElement","setMbtiVotes","labels","forEach","vote","count","datasets","label","backgroundColor","borderColor","borderWidth","createDataWithMbti","VoteChart","Comment","content","Date","toLocaleString","Comments","comments","colSpan","CommentList","Table","striped","bordered","hover","RegisterModal","handleSubmit","WaitModal","wait","DoneModal","CommentRegisterModal","setWait","CommentBottom","setComments","setSort","setDir","PersonGet","personId","setPerson","JobList","JobGet","jobId","setJob","ImageForm","image","upload","file","formData","FormData","append","headers","accept","cursor","files","CategoryList","categories","setCategories","ExistsWarning","exists","setExists","isExists","TextTooLongWarning","PersonRegisterForm","setName","desc","setDesc","Group","Control","onBlur","JobRegisterForm","FillAllModal","Register","gender","categoryId","description","getInitialState","success","setSuccess","notFilled","setNotFilled","postOne","RouteContainer","exact","path","component","Layout","LayoutContainer","useSelector","layout","dispatch","useDispatch","onLogoClick","setChildren","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6bdf5d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass GreetingTitle extends React.Component{\r\n    render(){\r\n        return (\r\n            <Alert.Heading className = 'p-2'>\r\n                MBTI.zip 에 오신것을 환영합니다! 🙌\r\n            </Alert.Heading >\r\n        )\r\n    }\r\n}\r\n\r\nexport default GreetingTitle;","\r\nimport React from 'react';\r\n\r\nclass GreetingContent extends React.Component{\r\n    render(){\r\n        return (\r\n            <p className = \"greeting-paragraph\">\r\n                좋아하는 드라마나 영화의 인물에 대한 MBTI가 평소에 궁금하지 않았나요? <br />\r\n                혹은 내 직업에 어떤 MBTI 유형이 가장 많이 분포해 있는지 궁금하신가요? <br />\r\n                <br />지금 궁금증을 해결해보세요! 😲<br />\r\n                MBTI-zip 에서는 투표를 통해 MBTI 를 확인할 수 있습니다. <br />\r\n                또 투표율에 대해서 뜨거운 토론을 펼칠 수 도 있어요! <br />\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GreetingContent;","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport GreetingTitle from './GreetingTitle';\r\nimport GreetingContent from './GreetingContent';\r\nimport './Greeting.css';\r\n\r\nclass Greeting extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <Alert variant = \"light\" className = \"alert-greeting\" >\r\n                <GreetingTitle />\r\n                <GreetingContent />\r\n            </Alert>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Greeting;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nconst TrendingHead = ({ type }) => {\r\n    \r\n    const types = {\r\n        person : '인물',\r\n        job : '직업'}\r\n    return (\r\n        <div className = 'trending-head'>\r\n            <h3>Hot 🔥 | <span style = {{ fontWeight : 'lighter'}}>{types[type]}</span></h3>\r\n            <Link to ={\"/\" + type + \"/list?page=1&size=16&sort=likes&dir=desc\"}>\r\n                <Button variant = \"primary\" size= \"sm\">\r\n                    더보기\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingHead;","import React, { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PersonItem = ({ person }) => {\r\n\r\n    return (\r\n        <Link className = \"itemLink\" to={\"/person/get/\" + person.id} >\r\n            <Card className=\"m-3\" >\r\n                <Card.Body>\r\n                <img className = \"item-card-image\" src = {\"/api/v1/file/get/\" + person.filename} />\r\n                    <Card.Title>{person.name}</Card.Title>\r\n                    <Card.Text></Card.Text>\r\n                    <Card.Text>{person.category} | {person.mbti} </Card.Text>\r\n                    <Card.Text>❤ : {person.likes} | 👁‍🗨 : {person.views}</Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PersonItem;  ","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './Item.css';\r\n\r\nconst JobItem = ({ job }) => {\r\n\r\n    return (\r\n        <Link className = \"itemLink\" to = {\"/job/get/\" + job.id} >\r\n            <Card className = 'm-3'  variant = 'top'>\r\n            <Card.Body>\r\n            <img className = \"item-card-image\" src = {\"/api/v1/file/get/\" + job.filename} />\r\n                <Card.Title>{job.title}</Card.Title>\r\n                <Card.Text >{job.mbti}</Card.Text>\r\n                <Card.Text>❤ : {job.likes} | 👁‍🗨 : {job.views}</Card.Text>\r\n            </Card.Body>\r\n            </Card>\r\n        </Link>    \r\n    )\r\n}\r\n\r\nexport default JobItem;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './renderHelper.css';\r\n\r\nconst Icon = ({ icon }) => (\r\n    <FontAwesomeIcon \r\n        icon = {icon}\r\n        size = \"6x\" \r\n    />\r\n)\r\n\r\nconst SpinningIcon = ({ icon }) => {\r\n    const [speed, setSpeed] = useState(3);\r\n    return (\r\n        <FontAwesomeIcon \r\n            icon = {icon}\r\n            size = \"6x\" \r\n            style = {{animation: `spin ${speed}s linear infinite`}}\r\n        />\r\n    )\r\n}\r\n\r\nexport const element = (icon, text) => (\r\n    <div \r\n    className = \"warn\"\r\n    style = {{\r\n        display : 'flex',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        flexDirection : 'column',\r\n        width : '100%',\r\n        height : '100%',\r\n        padding : '10%'}}\r\n    >\r\n    {icon}\r\n    <span\r\n        style = {{\r\n            fontSize : '24px',\r\n            padding : '10%',\r\n        }}\r\n        className = \"loading-text\"\r\n    >\r\n        {text}\r\n    </span>\r\n</div>\r\n)\r\nexport const Loading = () => {\r\n        const text = \"로딩중...\"\r\n\r\n        return element(<SpinningIcon icon = {faSpinner} />, text);\r\n}\r\n\r\nexport const Error = ({ error }) => {    \r\n    let msg = error.toString();\r\n    let text = \"에러 발생 : \" + msg;\r\n    if(msg.includes(\"404\")) text = \"404 리소스를 찾지 못했습니다.\";\r\n    if(msg.includes(\"50\")) text = \"서버 오류입니다. 빠르게 조치하겠습니다!\";\r\n\r\n    return element(<Icon icon = {faExclamationCircle} />, text);\r\n}\r\n\r\n\r\n\r\nexport const NotFound = () => {\r\n\r\n    return element(null , '결과가 없습니다. 😓');\r\n}\r\n\r\nexport const NotFound404 = () => {\r\n    return element(<Icon icon = {faExclamationCircle} />, \"404 리소스를 찾을 수 없습니다.\")\r\n}\r\n\r\nexport const renderAfterApiCall = (items, error, loading, element) => {\r\n\r\n    if(error){\r\n        return <Error error = {error}/>;\r\n    }\r\n    if(loading){\r\n        return <Loading />;\r\n    }\r\n    if(!items){\r\n        return <NotFound />;\r\n    }\r\n    return element;\r\n}\r\n\r\n\r\nexport const NoItemFound = ({ type }) => (\r\n    <div\r\n        style = {{ width : '100%', height : '100%', textAlign : 'center', fontSize : '24px'}}>\r\n        아직 등록된 {type}이 없어요. 😥\r\n    </div>\r\n)","function changeTypeToKorean(type){\r\n    if(type === 'person'){\r\n        return '인물';\r\n    }\r\n    if(type === 'job'){\r\n        return '직업';\r\n    }\r\n}\r\n\r\nexport default changeTypeToKorean;","import React from 'react';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport PersonItem from './PersonItem';\r\nimport JobItem from './JobItem';\r\nimport { NoItemFound } from '../../modules/renderHelper';\r\nimport changeTypeToKorean from '../TypeChanger';\r\n\r\nconst ItemCardGroup = ({type, itemList}) => {\r\n\r\n    if(!itemList) return null;\r\n\r\n    function toPersonItemList(itemList){\r\n        return itemList.map(item => {\r\n            return <PersonItem \r\n                key = {item.id}\r\n                person = {item}\r\n            />\r\n        })\r\n        \r\n    }\r\n    function toJobItemList(itemList){\r\n        return itemList.map(item => {\r\n            return <JobItem \r\n                key = {item.id}\r\n                job = {item}\r\n            />\r\n            })\r\n    } \r\n    return (\r\n        <>\r\n        {\r\n            itemList && (itemList.length > 0) ? \r\n                <CardGroup className = ''>\r\n                    {type === \"person\" ?\r\n                    toPersonItemList(itemList) :\r\n                    toJobItemList(itemList)}\r\n                </CardGroup> : \r\n                <NoItemFound type = {changeTypeToKorean(type)} />\r\n        }\r\n\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemCardGroup;\r\n","import React from 'react';\r\nimport TrendingHead from './TrendingHead';\r\nimport ItemCardGroup from '../../common/item/ItemCardGroup';\r\nimport './Trending.css';\r\n\r\nconst Trending = ({ type , itemList}) => {\r\n    return (\r\n    <div className = \"trending\">\r\n        <TrendingHead type={type} />\r\n        <ItemCardGroup type = {type} itemList = {itemList} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Trending;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Greeting from './greeting/Greeting';\r\nimport Trending from './trending/Trending';\r\nimport { renderAfterApiCall } from '../modules/renderHelper';\r\n\r\nfunction Main (){\r\n\r\n    const[persons, setPersons] = useState(null);\r\n    const[jobs , setJobs] = useState(null);\r\n    const[loading, setLoading] = useState(false);\r\n    const[error, setError] = useState(null);\r\n    useEffect(() => {\r\n\r\n        const fetchItems = async () => {\r\n            try{\r\n                setPersons(null);\r\n                setJobs(null);\r\n                setLoading(true);\r\n                setError(null);\r\n                \r\n                const urlSuffix = \"/list?page=1&size=8&sort=likes&dir=desc\";\r\n                const personResponse = await axios.get(\"/api/v1/person\" + urlSuffix );\r\n                const jobResponse = await axios.get(\"/api/v1/job\" + urlSuffix ); \r\n                setPersons(personResponse.data['personGetDtos']);\r\n                setJobs(jobResponse.data['jobGetDtos']);\r\n\r\n            } catch (e){\r\n                setError(e);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchItems();\r\n    }, [])\r\n\r\n    const element = (\r\n        <div className = \"main\">\r\n            <Greeting />\r\n            <Trending type = \"person\" itemList = {persons}/>\r\n            <Trending type = \"job\" itemList = {jobs}/>\r\n        </div>\r\n    );\r\n\r\n    return renderAfterApiCall(persons, error, loading, element);\r\n}\r\n\r\nexport default Main;","import Main from '../main/Main';\r\n\r\n// action : SET_CHILD \r\nconst SET_CHILDREN = 'layout/SET_CHILDREN';\r\n\r\n// 상태: 레이아웃 child\r\nconst initialState = {\r\n    children : <Main />\r\n}\r\n\r\n// action 생성 함수\r\nexport const setChildren = children => {\r\n    return ({type : SET_CHILDREN, children})\r\n}\r\n\r\n// 구독 \r\n\r\n// 리듀서\r\nexport default function layout(state = initialState, action){\r\n\r\n    switch (action.type) {\r\n        case SET_CHILDREN:\r\n            return {\r\n                ...state,\r\n                children : action.children\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SearchForm = () => {\r\n\r\n    const [keyword, setKeyword] = useState(null);\r\n    const [type , setType ] = useState(\"person\");\r\n\r\n    const handleKeywordChange = e => {\r\n        setKeyword(e.target.value);\r\n    }\r\n\r\n    const handleTypeChange = e => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        \r\n        let filterBy;\r\n        if(type === \"job\"){\r\n            filterBy = 'title'\r\n        } else {\r\n            filterBy = 'name'\r\n        }\r\n        const url = \"/\" + type + \"/list?page=1&size=16&sort=createDate&dir=desc&filterBy=\" + filterBy + \"&keyword=\" + keyword;\r\n        window.location.href = url;\r\n    }\r\n\r\n    const handleKeyDown = e => {\r\n        if(e.key === 'Enter'){\r\n            e.preventDefault();\r\n            handleClick();\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"d-flex\" onKeyPress = {handleKeyDown}>\r\n            <Form.Select\r\n                className = \"w-50\" \r\n                defaultValue = {type}\r\n                onChange = {handleTypeChange}>\r\n                <option value=\"person\">인물</option>\r\n                <option value=\"job\">직업</option>\r\n                </Form.Select>\r\n            <FormControl\r\n                type=\"search\"\r\n                placeholder=\"검색\"\r\n                className =\"mr-2\"\r\n                aria-label =\"Search\"\r\n                onChange = {handleKeywordChange}\r\n            />\r\n            <Button \r\n                variant=\"outline-success\" \r\n                bg=\"info\" \r\n                onClick = {handleClick}\r\n                >\r\n                    GO\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default React.memo(SearchForm);","import React from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { Link } from 'react-router-dom';\r\nconst PersonDropdownItem = ({name}) => {\r\n    let baseUrl = \"/person/list?page=1&size=16&sort=createDate&dir=desc\";\r\n    \r\n    let url = baseUrl + \"&filterBy=category&keyword=\" + name;\r\n    if(name === '전체'){\r\n        url = baseUrl\r\n    }\r\n    return (\r\n        \r\n            <NavDropdown.Item style = {{ display : 'flex'}}>\r\n                <Link to={url}\r\n                    style = {{ width : '100%', height : '100%'}}>        \r\n                    {name}\r\n                </Link>        \r\n            </NavDropdown.Item>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default PersonDropdownItem;","import axios from 'axios';\r\n\r\nexport const fetchItems = (url, type, setItem, setError, setLoading) => {\r\n\r\n    const types = {\r\n        person : 'personGetDtos',\r\n        job : 'jobGetDtos',\r\n        mbti: 'mbtiGetDtos',\r\n        comment : 'commentGetDtos',\r\n        category : 'categoryGetDtos',\r\n    };\r\n\r\n    const functions = {\r\n        setItem : setItem,\r\n        setError : setError,\r\n        setLoading : setLoading\r\n    };\r\n\r\n    handleRequest(() => axios.get(url), functions, types[type]);\r\n}\r\n\r\nexport const fetchOne = (url, setItem, setError, setLoading) => {\r\n\r\n    const functions = {\r\n        setItem : setItem,\r\n        setError : setError,\r\n        setLoading : setLoading\r\n    };\r\n\r\n    handleRequest(() => axios.get(url), functions, '');\r\n}\r\n\r\nexport const postOne = (url, data, setItem, setError, setLoading) => {\r\n\r\n    const request = () => axios.post(url, data);\r\n\r\n    const functions = {\r\n        setItem : setItem,\r\n        setError : setError,\r\n        setLoading : setLoading\r\n    };\r\n\r\n    handleRequest(request, functions, 'isSuccess');\r\n}\r\n\r\nexport const fetchVotes = async (type , itemId, setValue) => {\r\n  \r\n    let value = {\r\n        mbtiVotes : '',\r\n        total : '',\r\n        available : '',\r\n        error : '',\r\n        loading : false,\r\n    }\r\n\r\n    try{\r\n         \r\n\r\n        setValue(value);\r\n\r\n        const url = \"/api/v1/vote/list/\" + type + \"/\" + itemId;\r\n        const response = await axios.get(url);\r\n\r\n        const mbtiCountGetDtos = response.data['mbtiCountGetDtos'];\r\n        const total = response.data['total'];\r\n        const available = response.data['available'];\r\n\r\n        value = {\r\n            ...value,\r\n            mbtiVotes : mbtiCountGetDtos,\r\n            total : total,\r\n            available : available,\r\n        };\r\n\r\n    } catch (e){\r\n        setValue({\r\n            ...value,\r\n            error : {e}\r\n        })\r\n    }\r\n    value = {\r\n        ...value,\r\n        loading: false\r\n    };\r\n\r\n    setValue(value);\r\n\r\n    console.log(\"apiCaller -> mbtiVotes : \" + value['mbtiVotes']);\r\n}\r\n\r\n\r\nexport const deleteFile = async (filename) => {\r\n    if(filename){\r\n        try {\r\n            await axios.delete(\"/api/v1/file/delete/\" + filename );\r\n        } catch (e){\r\n            console.log(\"파일 삭제 중 에러 : \" + e);\r\n        }\r\n    }\r\n}\r\n\r\nconst handleRequest = async (request, functions, dataString) => {\r\n\r\n    const setItem = functions.setItem;\r\n    const setError = functions.setError;\r\n    const setLoading = functions.setLoading;\r\n\r\n    try{\r\n        setItem(null);\r\n        setError(null);\r\n        setLoading(true);\r\n\r\n        const response = await request();\r\n        \r\n        if(dataString === ''){\r\n            setItem(response.data);\r\n        } else {\r\n            setItem(response.data[dataString]);\r\n        }\r\n    }catch (e){\r\n        setError(e);\r\n    }\r\n    setLoading(false);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport SearchForm from './SearchForm';\r\nimport PersonDropdownItem from './PersonDropdownItem';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport './Collapse.css';\r\nimport { useFetchOne } from '../../../hooks/CustomHooks';\r\n\r\nconst CollapseMenu = () => {\r\n\r\n    const [data, loading, error ] = useFetchOne(\"/api/v1/category/list\");\r\n\r\n    return (\r\n        <Navbar.Collapse id =\"navbarScroll\" className = \"d-flex justify-content-between\">\r\n            <Nav className = \"p-2\"\r\n                style = {{ maxHeight : '300px'}}\r\n                navbarScroll>\r\n                <Nav.Link>\r\n                    <Link to =\"/mbti/list\" className=\"my-nav-link\" >MBTI</Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                    <Link to =\"/job/list\" className=\"my-nav-link\">직업</Link>\r\n                </Nav.Link>\r\n                <NavDropdown title=\"인물\"  className=\"my-nav-link\" id=\"navbarScrollingDropdown\">\r\n                    <PersonDropdownItem name = \"전체\" />\r\n                    { data ? \r\n                        data['categoryGetDtos'].map( category => {\r\n                        return <PersonDropdownItem key = {category.id} name = {category.name} />\r\n                        }) : \"\"\r\n                    }\r\n                    { loading ?\r\n                         \"로딩중...\" : <></>}\r\n                    { error ? \r\n                        \"에러 : \" + error : <></>  }\r\n                </NavDropdown>    \r\n            </Nav>\r\n            <Nav className = \"p-2\">\r\n                <SearchForm />\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default React.memo(CollapseMenu);","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchOne } from '../modules/apiCaller';\r\n\r\nexport const useFetchOne = (url) => {\r\n\r\n    const [data , setData] = useState(null);\r\n    const [loading, setLoading ] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        fetchOne(url, setData, setError, setLoading);\r\n    }, []);\r\n\r\n    return [data , loading, error];\r\n}\r\n\r\nexport const useFetchList = (url) => {\r\n\r\n    const [data , setData] = useState(null);\r\n    const [loading, setLoading ] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const fetchList = async () => {\r\n            try{\r\n                setData(null);\r\n                setError(null);\r\n                setLoading(true);\r\n\r\n                const response = await axios.get(url);\r\n\r\n                setData(response['data']);\r\n            } catch(e){\r\n                setError(e);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchList();\r\n    }, []);\r\n\r\n    return [data, loading, error];\r\n}","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport CollapseMenu from './collapse/CollapseMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand = \"lg\" className =\"p-3\">\r\n            <Link to = \"/\"><Navbar.Brand>MBTI-zip</Navbar.Brand></Link>\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <CollapseMenu />\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass Footer extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <Alert variant=\"success\" className =\"d-flex justify-content-center\"\r\n                style = {{ margin : '0'}}>\r\n                <p className = \"p-3\" style = {{fontSize : '12px',  color : \"black\"}}>© KangChanSong</p> \r\n                <Alert.Link className = \"p-3\" href=\"https://github.com/KangChanSong\">\r\n                    <FontAwesomeIcon icon={faGithub}/>\r\n                </Alert.Link>\r\n            </Alert>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport './Item.css';\r\nconst mbtiText = {\r\n    INTJ : '용의주도한 전략가',\r\n    INTP : '논리적인 사색가',\r\n    ENTJ : '대담한 통솔자',\r\n    ENTP : '뜨거운 논쟁을 즐기는 변론가',\r\n    INFJ : '선의의 옹호자',\r\n    INFP : '열정적인 중재자',\r\n    ENFJ : '정의로운 사회운동가',\r\n    ENFP : '재기발랄한 활동가',\r\n    ISTJ : '청렴결백한 논리주의자',\r\n    ISFJ : '용감한 수호자',\r\n    ESTJ : '엄격한 관리자',\r\n    ESFJ : '사교적인 외교관',\r\n    ISTP : '만능 재주꾼',\r\n    ISFP : '호기심 많은 예술가',\r\n    ESTP : '모험을 즐기는 사업가',\r\n    ESFP : '자유로운 영혼의 연예인',\r\n    NONE : '아직 투표되지 않음',\r\n    DRAW : '투표 결과가 같은 MBTI가 두개 이상',\r\n}\r\n\r\nconst MbtiItem = ({ name }) => {  \r\n    return (\r\n        <Link to ={\"/mbti/get/\" + name } className = \"itemLink\">\r\n            <Card className = 'm-3' bg = 'light' variant = 'top'>\r\n            <Card.Body>\r\n                {/* <Card.Img className = \"mbti-card-image \"src = \"https://static.neris-assets.com/images/personality-types/avatars/infp-mediator.png\"/> */}\r\n                <Card.Title><b>{name}</b></Card.Title>\r\n                <Card.Text>{mbtiText[name]}</Card.Text>\r\n            </Card.Body>\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MbtiItem;","import React, { useEffect, useState } from 'react';\r\nimport MbtiItem from '../../common/item/MbtiItem';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport './MbtiList.css';\r\nimport { fetchItems } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\n\r\nconst MbtiList = () => {\r\n\r\n    const[mbtis, setMbtis] = useState(null);\r\n    const[loading, setLoading] = useState(false);\r\n    const[error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = \"/api/v1/mbti/list\";\r\n        fetchItems(url, 'mbti', setMbtis, setError, setLoading);\r\n    }, []);\r\n\r\n    const MbtiElements = ({ mbtis }) => {\r\n\r\n        if(!mbtis) return null;\r\n\r\n        return (\r\n            <>\r\n            {\r\n                mbtis.map(mbti => (<MbtiItem key = {mbti.id} name = {mbti.name.toUpperCase()} />))\r\n            }\r\n            </>\r\n        )\r\n    }\r\n\r\n    const element = (\r\n        <div className = \"mbtiList\">\r\n            <h1>Mbti 목록</h1>\r\n            <CardGroup>\r\n                <MbtiElements mbtis = {mbtis} />\r\n            </CardGroup>\r\n        </div>\r\n    );\r\n\r\n    const render = renderAfterApiCall(mbtis, error, loading, element);\r\n\r\n    return render;\r\n}\r\n\r\nexport default MbtiList;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst MbtiGetTitle = ({ mbtiName, type}) => {\r\n\r\n    const types = {\r\n        person : '인물',\r\n        job : '직업'\r\n    }\r\n\r\n    const handleClick = () => {\r\n        const url = \"/\" + type + \"/list?page=1&size=16&sort=createDate&dir=desc&filterBy=mbti&keyword=\" + mbtiName;\r\n        window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <div className = \"mbtiGet-title\">\r\n            <h2>{mbtiName} | {types[type]}</h2>  \r\n            <a href=\"#\">\r\n                <Button variant = \"primary\" size= \"sm\" onClick = {handleClick}>\r\n                    더보기\r\n                </Button>\r\n            </a>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MbtiGetTitle;","import React from 'react';\r\nimport ItemCardGroup from '../../common/item/ItemCardGroup';\r\nimport MbtiGetTitle from './MbtiGetTitle';\r\nimport changeTypeToKorean from '../../common/TypeChanger';\r\nimport { NoItemFound } from '../../modules/renderHelper';\r\n\r\n\r\nconst MbtiGetBox = ({type , mbtiName, itemList}) => {\r\n\r\n    return (\r\n        <div className=\"mbtiGet-box\">\r\n            \r\n            <MbtiGetTitle \r\n                mbtiName = {mbtiName}\r\n                type = {type}\r\n            />\r\n            { itemList && (itemList.length > 0) ? \r\n                <ItemCardGroup \r\n                type = {type}\r\n                itemList = {itemList}\r\n                />\r\n                :\r\n                <NoItemFound type = {changeTypeToKorean(type)} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MbtiGetBox;","import React, { useEffect, useState } from 'react';\r\nimport MbtiGetBox from './MbtiGetBox';\r\nimport './MbtiGet.css';\r\nimport { fetchItems } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\n\r\n\r\nconst MbtiGet = ({ match }) => {\r\n\r\n    // api call\r\n    const [ persons, setPersons] = useState(null);\r\n    const [ jobs, setJobs] = useState(null);\r\n    const [ error,  setError] = useState(null);\r\n    const [ loading, setLoading] = useState(false);\r\n\r\n    let name = match.params.name;\r\n\r\n    useEffect(() => {\r\n        const url = \"/list?&page=1&size=8&sort=likes&dir=desc&filterBy=mbti&keyword=\" + name; \r\n        fetchItems(\"/api/v1/person\" + url, 'person', setPersons, setError, setLoading);\r\n        fetchItems(\"/api/v1/job\" + url, 'job', setJobs, setError, setLoading);\r\n    }, []);\r\n\r\n    const element = (\r\n        <div className = \"mbtiGet\">\r\n            <MbtiGetBox \r\n                mbtiName = {name}\r\n                type=\"person\" \r\n                itemList = {persons}/> \r\n            <MbtiGetBox \r\n                mbtiName = {name}\r\n                type=\"job\" \r\n                itemList = {jobs}/> \r\n        </div>\r\n    )    \r\n    return renderAfterApiCall({ persons : persons, jobs: jobs}, error, loading, element);\r\n}\r\n\r\nexport default MbtiGet;","import qs from 'qs';\r\n\r\nexport const createListUrlWithQuery = (search, baseUrl) => {\r\n\r\n    const parsed = qs.parse(search, {\r\n        ignoreQueryPrefix: true\r\n    });\r\n\r\n    if(!parsed.page && !parsed.size ){\r\n        parsed.page = '1';\r\n        parsed.size = '16';\r\n    }   \r\n    if(!parsed.sort && !parsed.dir){\r\n        parsed.sort = 'createDate';\r\n        parsed.dir = 'desc';\r\n    }\r\n    \r\n    let url = baseUrl \r\n        + \"?page=\" + parsed.page\r\n        + \"&size=\" + parsed.size\r\n        + \"&sort=\" + parsed.sort\r\n        + \"&dir=\" + parsed.dir;\r\n    \r\n    if(parsed.keyword && parsed.filterBy){\r\n        url += \"&keyword=\" + parsed.keyword + \"&filterBy=\" + parsed.filterBy;\r\n    }\r\n    return url;\r\n}\r\n\r\nexport const createQueryWithCondition = (forWhat, object) => {\r\n\r\n    let url = new URL(window.location.href);\r\n    let params = url.searchParams;\r\n    if(forWhat === 'page'){\r\n        params.set('page', object.page);\r\n        params.set('size', object.size);\r\n    }\r\n    if (forWhat === 'sort'){\r\n        params.set('sort', object.sort);\r\n        params.set('dir', object.dir);\r\n    }\r\n    if( forWhat === 'search'){\r\n        params.set('filterBy', object.filterBy);\r\n        params.set('keyword', object.keyword);\r\n    }\r\n\r\n    return window.location.pathname + \"?\" + params.toString();\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { createQueryWithCondition } from '../modules/urlGenerator';\r\nimport './Page.css';\r\n\r\nconst makePage = (curr, size, total) => {\r\n    let last = Math.ceil(curr / 10) * 10;\r\n    let start = last - 9;\r\n    let realLast = Math.ceil(total / size);\r\n    let prev, next = true;\r\n\r\n    if(start === 1){\r\n        prev = false;\r\n    }\r\n    if(last * size > total){\r\n        next = false;\r\n    }\r\n    if(realLast < last){\r\n        last = realLast;\r\n    }\r\n\r\n    return [start, last, prev, next];\r\n}\r\n\r\nconst PageButton = ({ number, size, curr, setPage }) => {\r\n    return (\r\n            <Pagination.Item active = { number == curr} >\r\n                <Link\r\n                    to = {createQueryWithCondition('page', { page : number, size : size})}\r\n                                onClick = {() => setPage(number)}>\r\n                    {number}\r\n                </Link>\r\n            </Pagination.Item>\r\n    )\r\n        \r\n}\r\n\r\n\r\nconst Page = ({curr, size, type, setPage}) => {\r\n\r\n    const [total, setTotal] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            try{    \r\n                setError(null);\r\n                setLoading(null);\r\n                \r\n                const url = \"/api/v1/\" + type + \"/count/all\";\r\n                const response = await axios.get(url);\r\n                setTotal(response.data['count']);\r\n            } catch(e){\r\n                setError(e);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        fetch();\r\n\r\n        return () => setLoading(false);\r\n    }, []);\r\n\r\n    const [start, last, prev, next] = makePage(curr, size, total);\r\n\r\n    const PageButtonList = () => {\r\n\r\n        let pages = [];\r\n        for(let i = start ; i <= last ; i++){\r\n            pages.push(\r\n                <PageButton\r\n                    key = {i}\r\n                    number = {i}\r\n                    curr = {curr}\r\n                    size = {size}\r\n                    setPage = {setPage}/>\r\n            )\r\n        }\r\n\r\n        return pages;\r\n    }\r\n\r\n    if(error){\r\n        return (<Pagination>\r\n            <p>페이지 불러오는 중 에러 발생 : {error}</p>\r\n        </Pagination>);\r\n    }\r\n    if(loading){\r\n        return (<Pagination>\r\n            <p>페이지 버튼을 불러오는 중입니다...</p>\r\n        </Pagination>);\r\n    }\r\n\r\n    return  (\r\n        <Pagination>\r\n            {prev ? \r\n            <Link to = {createQueryWithCondition('page', { page : start-1, size : size})}>\r\n                <Pagination.Prev  />\r\n            </Link>\r\n            : <> </>}\r\n\r\n            {<PageButtonList />}\r\n\r\n            {next ?\r\n            <Link to = {createQueryWithCondition('page', { page : start+1, size : size})}>\r\n                <Pagination.Next />\r\n            </Link>\r\n            : <> </>}\r\n        </Pagination>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(Page);","import React from 'react';\r\nimport Page from '../Page';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link  } from 'react-router-dom';\r\nimport './List.css';\r\nconst ListFoot = ({ type, curr, size, setPage }) => {\r\n    return (\r\n        <div className = \"listFoot\" >\r\n            <div></div>\r\n            <Page \r\n                setPage = {setPage}\r\n                curr = {curr}\r\n                size = {size}\r\n                type = {type}\r\n            />     \r\n            <Link to ={\"/\" + type + \"/register\"}>\r\n                <Button \r\n                    variant = \"primary\" \r\n                    size= \"sm\">\r\n                    등록하기\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(ListFoot);","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst desc = \"desc\";\r\nconst asc= \"asc\"\r\nconst createDate = \"createDate\";\r\nconst updateDate = \"updateDate\";\r\nconst likes = \"likes\";\r\nconst views = \"views\";\r\n\r\nconst CommentSelect = ({ onChange, sort, dir}) => (\r\n    <Form.Select size='sm' onChange = {onChange} defaultValue = {sort + \"#\" + dir}>\r\n            <option value = {updateDate + \"#\" +  desc}>\r\n                    최근순\r\n            </option>\r\n            <option value = {updateDate + \"#\" +  asc}>\r\n                    오래된순\r\n            </option>\r\n    </Form.Select>)\r\n\r\n\r\nconst ItemSelect = ({ onChange, sort ,dir}) => (\r\n    <Form.Select size='sm' onChange = {onChange} defaultValue = {sort + \"#\" + dir}>\r\n            <option value = {createDate + \"#\" +  desc}>\r\n                    최근순\r\n            </option>\r\n            <option value = {createDate + \"#\" +  asc}>\r\n                    오래된순\r\n            </option>\r\n            <option value = {likes + \"#\" +  desc}>  \r\n                    좋아요 많은 순\r\n            </option>\r\n            <option value = {likes + \"#\" +  asc}>\r\n                    좋아요 적은 순\r\n            </option>\r\n            <option value = {views + \"#\" +  desc}>\r\n                    조회수 많은 순\r\n            </option>\r\n            <option value = {views + \"#\" +  asc}>\r\n                    조회수 적은 순\r\n            </option>\r\n    </Form.Select>)\r\n\r\nconst SortSelect = ({type, sort , dir, handleChange}) => {\r\n\r\n    // handleChange 에 선택된 sort, dir 전달\r\n    const onChange = (e) => {\r\n            const [ extSort, extDir ] = e.target.value.split(\"#\");\r\n            handleChange({\r\n                sort : extSort,\r\n                dir : extDir,\r\n            });\r\n    }  \r\n    return (\r\n            <>\r\n            {type === 'comment' ?\r\n                    <CommentSelect\r\n                            onChange = {onChange}\r\n                            sort = {sort}\r\n                            dir = {dir}\r\n                    /> :\r\n                    <ItemSelect \r\n                            onChange = {onChange}\r\n                            sort = {sort}\r\n                            dir = {dir}\r\n                    />}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default SortSelect;","import React from 'react';\r\nimport changeTypeToKorean from '../../common/TypeChanger';\r\nimport './List.css';\r\nimport SortSelect from '../select/SortSelect';\r\n\r\n\r\nconst ListHead = ({ type, sort, dir, keyword}) => {\r\n\r\n    const handleChange = ({ sort , dir}) => {\r\n        const url = \"/\" + type + \"/list?page=1&size=16&sort=\" + sort + \"&dir=\" + dir;\r\n        window.location.href = url; \r\n    }\r\n    return (\r\n        <div className = \"listHead\">\r\n                <h2>\r\n                    {changeTypeToKorean(type)} 목록 \r\n                        { keyword ? <span style = {{ fontSize : '18px'}}> | {keyword}</span> : <></> } \r\n                </h2>\r\n            \r\n                <SortSelect \r\n                        type = {type}\r\n                        sort = {sort}\r\n                        dir = {dir}\r\n                        handleChange = {handleChange}\r\n                        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ListHead);","import qs, { parse } from 'qs';\r\n\r\nexport const extractProperties = (location) => {\r\n\r\n    const parsed = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true\r\n    });\r\n\r\n    if(!parsed.page){\r\n        parsed.page = 1;\r\n    }\r\n    if(!parsed.size){\r\n        parsed.size = 16;\r\n    }\r\n    if(!parsed.sort){\r\n        parsed.sort = 'createDate';\r\n    }\r\n    if(!parsed.dir){\r\n        parsed.dir = 'desc';\r\n    }\r\n    return [ parsed.page, parsed.size, parsed.sort, parsed.dir, parsed.filterBy, parsed.keyword];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ItemCardGroup from '../../common/item/ItemCardGroup';\r\nimport ListFoot from '../../common/list/ListFoot';\r\nimport ListHead from '../../common/list/ListHead';\r\nimport { fetchItems  } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\nimport { createListUrlWithQuery } from '../../modules/urlGenerator';\r\nimport { extractProperties } from '../../modules/queryExtractor';\r\n\r\nconst PersonList = ({ location }) => {\r\n\r\n    const[persons, setPersons] = useState(null);\r\n    const[loading, setLoading] = useState(false);\r\n    const[error, setError] = useState(null);\r\n    \r\n    const [extPage, size, sort , dir, filterBy, keyword] = extractProperties(location);\r\n    const [page, setPage] = useState(extPage);\r\n\r\n    useEffect(() => {\r\n        const url = createListUrlWithQuery(location.search, '/api/v1/person/list');\r\n        fetchItems(url, 'person', setPersons, setError, setLoading);\r\n    }, [page, filterBy, keyword]);\r\n\r\n    return renderAfterApiCall(persons, error, loading, \r\n        <div className = \"personList\">\r\n            <ListHead \r\n                type = 'person'\r\n                sort = {sort}\r\n                dir = {dir}\r\n                keyword = {keyword}\r\n                />\r\n            <ItemCardGroup type = 'person' itemList = {persons} />\r\n            <ListFoot \r\n                setPage = {setPage}\r\n                curr ={page}\r\n                size = {size}\r\n                type = 'person'\r\n            />\r\n        </div>);\r\n}\r\n\r\nexport default React.memo(PersonList);","import React from 'react';\r\n\r\nconst VoteChartContext = React.createContext();\r\n\r\nexport {VoteChartContext};\r\n\r\nconst {Provider, Consumer : ContextConsumer} = VoteChartContext;\r\n\r\nclass ContextProvider extends React.Component{\r\n    \r\n    state = {\r\n        value : '',\r\n    }\r\n\r\n    actions = {\r\n        setValue : (value) => {\r\n            this.setState({ value });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { state, actions } = this;\r\n        const value = {state, actions};\r\n        return (\r\n            <Provider value = {value}>\r\n                {this.props.children}\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    ContextConsumer,\r\n    ContextProvider,\r\n};","import React, { useEffect, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { fetchItems, fetchVotes } from '../modules/apiCaller';\r\nimport { ContextConsumer } from '../context/ContextContainer';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './Vote.css';\r\nimport axios from 'axios';\r\n\r\nconst VoteCheckModal = ({ show, setShow,  handleVote}) => {\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Modal show = {show}>\r\n            <Modal.Body>\r\n                <p>한번 투표하면 취소할 수 없습니다. <br />\r\n                   그래도 투표하시겠어요?</p>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick = {handleClose}>닫기</Button>\r\n                <Button variant=\"primary\" onClick = {handleVote}>투표</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst VoteFormElement = ({ type, id, isRendered, value , setValue }) => {\r\n    // mbti 조회\r\n    const [mbtis , setMbtis] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error , setError] = useState(null); \r\n\r\n    // mbti 투표\r\n    const [selectedMbti, setSelectedMbti] = useState(null);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const url = \"/api/v1/mbti/list\";\r\n        if(isRendered){\r\n            fetchItems(url, 'mbti', setMbtis, setError, setLoading);\r\n            fetchVotes(type, id, setValue);\r\n        }\r\n    }, [])\r\n\r\n    // state 별 렌더링\r\n    const createMbtiOptions = (mbtis) => {\r\n        if(loading || !mbtis) return (<option>불러오는 중</option>)\r\n        if(error) return (<option>ERROR : {error}</option>)\r\n        return mbtis.map(mbti => {\r\n            let name = mbti['name'];\r\n            return (\r\n                <option key = {mbti.id} value={mbti.id}>\r\n                    {name.toUpperCase()}\r\n                </option>\r\n            )\r\n        })\r\n    }\r\n\r\n    // select 에서 mbti 선택시 처리\r\n    const handleChange = (e) => setSelectedMbti(e.target.value);\r\n\r\n    // 투표하기 버튼처리\r\n    const handleVote = async () => {\r\n\r\n        if(!selectedMbti){\r\n            alert(\"MBTI를 선택해주세요.\")\r\n            return;\r\n        }\r\n\r\n        try{\r\n            const url = \"/api/v1/vote/mbti/\" + selectedMbti + \"/\" + type + \"/\" + id;\r\n            await axios.post(url);\r\n            fetchVotes(type, id,  setValue);\r\n            alert(\"투표 성공\")\r\n            setShow(false);\r\n        } catch(error){\r\n            alert('Error : ' + error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className = \"vote-form\" >\r\n        <Form>\r\n            <Form.Select \r\n                className = \"vote-form-select\"\r\n                onChange = {handleChange}>\r\n                <option>MBTI를 고르세요.</option>\r\n                {createMbtiOptions(mbtis)}\r\n            </Form.Select>\r\n            { value.available ? \r\n            <Button \r\n                variant = \"primary\" \r\n                className = \"vote-form-button\"\r\n                onClick = {() => setShow(true)}>\r\n                투표하기\r\n            </Button> :\r\n            <Button \r\n                variant = \"dark\"\r\n                className = \"vote-form-button\"\r\n                disabled>\r\n                이미 투표함\r\n            </Button>  }           \r\n        </Form>\r\n        </div>\r\n        <VoteCheckModal\r\n        show = {show}\r\n        setShow = {setShow}\r\n        handleVote = {handleVote}\r\n    />\r\n    </>\r\n    );\r\n}\r\n\r\nconst VoteForm = ({ type , id, isRendered}) => (\r\n    <ContextConsumer >\r\n        {\r\n            ({ state, actions}) => (\r\n                <VoteFormElement\r\n                    type = {type}\r\n                    id = {id}\r\n                    isRendered = {isRendered}\r\n                    value = {state.value}\r\n                    setValue=  {actions.setValue}\r\n                />\r\n            )\r\n        }\r\n    </ContextConsumer>\r\n)\r\n\r\nexport default React.memo(VoteForm);","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SuccessModal = ({ type ,suffix , show, setShow }) => {\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        if(type === 'comment'){\r\n            window.location.reload();\r\n            return;\r\n        }\r\n        window.history.back();\r\n    }\r\n\r\n    return (\r\n        <Modal show = {show}>\r\n            <Modal.Body>\r\n                <p>성공적으로 {suffix}되었습니다.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick = {handleClose} >\r\n                        닫기\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SuccessModal;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst RegisterSuccessModal = ({ msg, show , setShow}) => {\r\n    return (\r\n        <Modal show = {show} >\r\n            <Modal.Body>\r\n                <p>에러 : {msg}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick = {() => setShow(false)} >\r\n                        닫기\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RegisterSuccessModal;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst RegisterLoadingModal = ({suffix, show }) => {\r\n\r\n    return (\r\n        <Modal show = {show} >\r\n            <Modal.Body>\r\n                <p>{suffix}중...</p>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RegisterLoadingModal;","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\nimport SuccessModal from './register/SuccessModal';\r\nimport ErrorModal from './register/ErrorModal';\r\nimport LoadingModal from './register/LoadingModal';\r\nimport './DeleteModal.css';\r\n\r\nconst DeleteModal = ({ type , size, text, id }) => {\r\n    const [show , setShow] = useState(false);\r\n    const [form , setForm ] = useState({ password : ''});\r\n\r\n    const [done ,setDone ] = useState(false);\r\n    const [loading , setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n             ...form,\r\n            password : e.target.value});\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n        setForm({ password : ''});\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if(!form.password || form.password ===''){\r\n            alert(\"비밀번호를 입력해주세요.\");\r\n            return;\r\n        }\r\n        requestDelete();\r\n    }\r\n\r\n    const requestDelete = async () => {\r\n        try {\r\n\r\n            setDone(false);\r\n            setError(null);\r\n            setLoading(false);\r\n\r\n            const url = \"/api/v1/\" + type + \"/delete/\" + id;\r\n            const response = await axios.delete(url, { data : form });\r\n            const isSuccess = response.data['isSuccess'];\r\n            if(isSuccess){\r\n                setDone(true);\r\n            } else {\r\n                alert(\"비밀번호가 맞지 않습니다.\");\r\n            }\r\n        } catch (e){\r\n            setError(e);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                size= {size}\r\n                variant = \"secondary\"\r\n                onClick = {handleShow}>\r\n                {text}\r\n            </Button>\r\n\r\n            <Modal show = {show} onHide = {handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>삭제</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className = \"delete-modal-body\" >\r\n                    <label className = \"delete-modal-password-text\">비밀번호를 입력하세요.</label><br />\r\n                    <input type=\"password\" name=\"password\" className =\"delete-modal-password-input\" onChange = {handleChange}/>\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant = \"secondary\" onClick = {handleClose}>\r\n                        닫기\r\n                    </Button>\r\n                    <Button variant = 'primary' onClick = {handleDelete}>\r\n                        삭제\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <SuccessModal type= {type} show = {done} setShow = {setDone} suffix = '삭제'/>\r\n            <LoadingModal show = {loading} suffix = \"삭제\" />\r\n            <ErrorModal msg = {error} show = {error} setShow = {setError}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteModal;","import React, { useEffect, useState } from 'react';\r\nimport changeTypeToKorean from '../TypeChanger';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport VoteForm from '../../vote/VoteForm';\r\nimport DeleteModal from '../../modal/DeleteModal';\r\nimport './GetHead.css';\r\nimport axios from 'axios';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\n\r\nconst PersonHead = ({ item }) => (\r\n    <Alert variant = \"light\" className = \"get-alert\" >\r\n        <img className = \"get-img\" src = {\"/api/v1/file/get/\" + item.filename} />\r\n        <div className = \"get-text\">\r\n            <p>작성자 : {item.writer}</p>\r\n            <p>분류 : {item.category}</p>\r\n            <p>투표 결과 : {item.mbti}</p>\r\n        </div>\r\n    </Alert> );\r\n\r\nconst JobHead = ({ item }) => (\r\n    <Alert variant = \"light\" size = \"lg\" className = \"get-alert\">\r\n        <img className = \"get-img\" src = {\"/api/v1/file/get/\" + item.filename} />\r\n        <div className = \"get-text\">\r\n            <p>작성자 : {item.writer}</p>\r\n            <p>투표 결과 : {item.mbti}</p>\r\n        </div>\r\n    </Alert> \r\n);\r\n\r\n\r\n\r\n// item : Job 또는 Person 객체\r\n// type : job 또는 person\r\nconst GetHead = ({item, type}) => {\r\n\r\n    const [likes , setLikes] = useState(item.likes);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [available, setAvailable] = useState(null);\r\n    const [isRendered, setIsRendered] = useState(false);\r\n\r\n    const postToServer = async () => {\r\n        try {\r\n            setIsRendered(false);\r\n            setLikes(item.likes);\r\n            setAvailable(null);\r\n            setError(null);\r\n            setLoading(true);\r\n\r\n            const url = \"/api/v1/like/get/\" + type + \"/\" + item.id;\r\n            const response = await axios.get(url);\r\n\r\n            const likes = response.data['likes'];\r\n            const available = response.data['available'];\r\n        \r\n            setLikes(likes);\r\n            setAvailable(available);\r\n\r\n        } catch(e){\r\n            setError(e);\r\n        }\r\n        setLoading(false);\r\n        setIsRendered(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        postToServer();\r\n    }, []);\r\n\r\n    const handleLike = async () => {\r\n        if(available){\r\n            setLikes(likes + 1);\r\n        } else {\r\n            setLikes(likes - 1);\r\n        }\r\n\r\n        setAvailable(!available);\r\n        const url = \"/api/v1/like/\" + type + \"/\" + item.id;\r\n        await axios.post(url);\r\n        \r\n    }\r\n\r\n    const buttons = (<div className = \"get-head-buttons\">\r\n                        <p>조회수: {item.views}</p>\r\n                        <button onClick = {handleLike}>{ available ? '🤍' : '❤'} {likes}</button>\r\n                        <DeleteModal \r\n                            type = {type}\r\n                            text = \"삭제\"\r\n                            size = \"sm\"\r\n                            id = {item.id}\r\n                            />\r\n                    </div>);\r\n\r\n    const Element = ({ buttons } ) => (\r\n        <div className = \"get-head\">\r\n            <div className = \"get-head-top\">\r\n                <h2>{changeTypeToKorean(type)} | {type === 'person' ? item.name : item.title}</h2>\r\n                {buttons}\r\n            </div>\r\n            <div className = \"get-head-bottom\">\r\n                {type === 'person' ? \r\n                <PersonHead item = {item} /> :\r\n                <JobHead item = {item} />}\r\n                <VoteForm \r\n                isRendered = {isRendered}\r\n                type = {type}\r\n                id = {item.id}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return renderAfterApiCall(item, error, loading , <Element buttons = {buttons} />)\r\n}\r\n\r\n\r\nexport default React.memo(GetHead);","\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { renderAfterApiCall } from '../modules/renderHelper';\r\nimport './Vote.css';\r\nimport { ContextConsumer, VoteChartContext } from '../context/ContextContainer';\r\n\r\nfunction createDataWithMbti(mbtiVotes){\r\n    if(!mbtiVotes){\r\n      return;\r\n    }\r\n\r\n    let labels = [];\r\n    let data = [];\r\n    mbtiVotes.forEach(vote => {\r\n        labels.push(vote.mbti);\r\n        data.push(vote.count);\r\n    })   \r\n\r\n    return {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: data,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n}\r\n  \r\nconst options = {\r\nscales: {\r\n    yAxes: [\r\n    {\r\n        ticks: {\r\n        beginAtZero: true,\r\n        },\r\n    },\r\n    ],\r\n},\r\n};\r\n  \r\nconst VoteChartElement = ({ value}) => {\r\n  \r\n  const [mbtiVotes, setMbtiVotes] = useState(null);\r\n  const [ total , setTotal ] = useState(null);\r\n  const [ error, setError ] = useState(null);\r\n  const [ loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect( () => {\r\n    if(value){\r\n      setMbtiVotes(value['mbtiVotes']);\r\n      setTotal(value['total']);\r\n      setError(value['error']);\r\n      setLoading(value['loading']);      \r\n    }\r\n  }, [value]); \r\n  const data = createDataWithMbti(mbtiVotes);\r\n    \r\n    const element = (\r\n      <div className = \"vote-chart\">\r\n          <h3>MBTI별 투표율</h3>\r\n          <p>총 득표수 : {total}</p>\r\n          <Bar\r\n              data={data}\r\n              height={100}\r\n              options={options} />\r\n      </div>\r\n    );\r\n    \r\n    return renderAfterApiCall(mbtiVotes, error, loading, element);\r\n}\r\n\r\nconst VoteChart = () => (\r\n    <ContextConsumer>\r\n        { ({ state }) => (<VoteChartElement value = {state.value} />) }\r\n    </ContextConsumer>\r\n)\r\n  export default React.memo(VoteChart);","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport DeleteModal from '../modal/DeleteModal';\r\n\r\nconst Comment = ({ comment ,setPage }) => {\r\n\r\n    const formatDate = () => {\r\n        let date = new Date(comment.updateDate);\r\n        return date.toLocaleString();\r\n    }\r\n\r\n    return (\r\n        <tr key = {comment.id}>\r\n            <td>{comment.writer}</td>\r\n            <td>{comment.content}</td>\r\n            <td>{formatDate()}</td>\r\n            <td className = \"comment-list-button\">\r\n                    <DeleteModal\r\n                    text = '❌'\r\n                    type = \"comment\"\r\n                    size = \"sm\"\r\n                    id = {comment.id}\r\n                    setPage = {setPage}\r\n                    />\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst Comments = ({ comments }) => {\r\n    if(!comments || comments.length === 0) {\r\n        return (\r\n            <tr>\r\n                <td colSpan = \"3\">아직 작성된 댓글이 없습니다.</td>\r\n            </tr>\r\n        )\r\n    }\r\n    return comments.map(comment => {\r\n        return (\r\n            <Comment key = {comment.id} comment = {comment} />\r\n        )\r\n    })\r\n}\r\n\r\nconst CommentList = ({ comments}) => {\r\n\r\n    console.log(comments);\r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th style = {{ width : \"20%\"}}>작성자</th>\r\n                    <th style = {{ width : \"60%\"}}>내용</th>\r\n                    <th style = {{ width : \"20%\"}}>작성일</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <Comments\r\n                    comments = {comments}\r\n                />\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default React.memo(CommentList);","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './CommentRegisterModal.css';\r\n\r\nconst RegisterModal = ({show, handleChange, handleClose, handleSubmit}) => (\r\n    <Modal show = {show} onHide = {handleClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>댓글 등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className = \"register-modal-body\" onChange= {handleChange}>\r\n            <input type=\"text\" name=\"writer\" placeholder=\"작성자\" className =\"register-modal-input\"  />\r\n            <input type=\"content\" name=\"content\" placeholder=\"내용\" className =\"register-modal-input\" />\r\n            <input type=\"password\" name=\"password\" placeholder =\"비밀번호\" className =\"register-modal-input\" />\r\n        </Modal.Body>\r\n        \r\n        <Modal.Footer>\r\n            <Button variant = \"secondary\" onClick = {handleClose}>\r\n                닫기\r\n            </Button>\r\n            <Button variant = 'primary' onClick = {handleSubmit}>\r\n                등록\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n)\r\nconst WaitModal = ({ wait }) => {\r\n    return (\r\n        <Modal show = {wait} >\r\n            <Modal.Body>\r\n                등록중 입니다...\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst DoneModal = ({ done, setDone, setPage, page}) => {\r\n\r\n    const onClick = () => {\r\n        if(page === 1){\r\n            setPage(\"1\");    \r\n        } else {\r\n            setPage(1);\r\n        }\r\n        \r\n        setDone(false);\r\n    }\r\n\r\n    return (\r\n        <Modal show = {done} >\r\n            <Modal.Body>\r\n                댓글이 성공적으로 등록됐습니다.\r\n            </Modal.Body>\r\n            <Button onClick = {onClick}>\r\n                닫기\r\n            </Button>\r\n        </Modal>\r\n    )\r\n} \r\n\r\nfunction CommentRegisterModal({ type , id, setPage, page }){\r\n    const [show , setShow] = useState(false);\r\n    const [form , setForm ] = useState({writer : '', content: '', password: ''});\r\n\r\n    const [wait, setWait] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setForm({\r\n            writer: '', content: '', password: '' });\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setForm({\r\n            ...form,\r\n            [name] : value,\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        if(!form.writer || !form.content || !form.password){\r\n            alert(\"모두 입력해주세요!\");\r\n            return ;\r\n        } \r\n        e.preventDefault();\r\n        postToServer();\r\n        setWait(true);\r\n    }\r\n\r\n    const postToServer = async () => {\r\n\r\n        try {\r\n            const url = \"/api/v1/comment/\"+ type +\"/\" + id + \"/register\";\r\n\r\n            setShow(false);\r\n            const response = await axios.post(url, form);\r\n            const isSuccess = response.data['isSuccess'];\r\n            if(isSuccess){\r\n                setWait(false);\r\n                setDone(true);\r\n            } else {\r\n                alert('문제가 발생했습니다.');\r\n            }\r\n        } catch(e){\r\n            alert(\"Error : \" + e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                variant = 'primary' \r\n                onClick = {handleShow}>\r\n                댓글 등록\r\n            </Button>\r\n\r\n            <RegisterModal\r\n                show = {show}\r\n                handleChange = {handleChange}\r\n                handleClose = {handleClose}\r\n                handleSubmit = {handleSubmit}\r\n            />            \r\n\r\n            <WaitModal\r\n                wait = {wait}\r\n            />\r\n\r\n            <DoneModal\r\n                done = {done}\r\n                setDone = {setDone}\r\n                setPage = {setPage}\r\n                page = {page}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CommentRegisterModal;","import React from 'react';\r\n\r\nimport Page from '../common/Page';\r\nimport CommentRegisterModal from '../modal/CommentRegisterModal';\r\nconst CommentBottom = ({ type, id, page, setPage}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className = \"comment-bottom\">\r\n            <div></div>\r\n            <Page \r\n                curr = {page}\r\n                type = {'comment/' + type + \"/\" + id }\r\n                size = '10'\r\n                setPage = {setPage}/>\r\n            <CommentRegisterModal \r\n                type = {type} \r\n                id = {id}\r\n                page = {page}\r\n                setPage = {setPage}/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(CommentBottom);","import React, { useEffect, useState } from 'react';\r\nimport CommentList from './CommentList';\r\nimport './Comment.css';\r\nimport CommentBottom from './CommentBottom';\r\nimport { fetchItems } from '../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../modules/renderHelper';\r\nimport SortSelect from '../common/select/SortSelect';\r\n\r\nconst Comment = ({type , id}) => {\r\n    \r\n    const [comments, setComments] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error,  setError] = useState(null);\r\n    \r\n    const [sort, setSort] = useState(\"updateDate\");\r\n    const [dir, setDir] = useState(\"desc\");\r\n    const [page, setPage] = useState(1);\r\n    const size = 10;\r\n    \r\n    useEffect(() => {\r\n        const url = \"/api/v1/comment/\" + type + \"/\" + id + \"/list?page=\" + page \r\n                                + \"&size=\" +size + \"&sort=\" + sort + \"&dir=\" + dir;\r\n        fetchItems(url, 'comment', setComments, setError, setLoading);\r\n    }, [page, sort, dir]);\r\n\r\n    const handleChange = ({ sort , dir}) => {\r\n        setSort(sort);\r\n        setDir(dir);\r\n    }\r\n\r\n    const element = (\r\n        <div className = \"comment\">\r\n            <div className = \"comment-head\">\r\n                <h2>토론</h2>\r\n                <SortSelect\r\n                    type = 'comment'\r\n                    sort = {sort}\r\n                    dir = {dir}\r\n                    handleChange = {handleChange}\r\n                />\r\n            </div>\r\n\r\n            <CommentList comments = {comments} setPage = {setPage}/>\r\n            <CommentBottom \r\n                type = {type} \r\n                id = {id}\r\n                page = {page}\r\n                setPage = {setPage}\r\n                setComments = {setComments} />\r\n        </div>\r\n    )\r\n    \r\n    return renderAfterApiCall(comments, error, loading, element);\r\n}\r\n\r\nexport default React.memo(Comment);","import React, { useEffect, useState } from 'react';\r\nimport GetHead from '../../common/get/GetHead';\r\nimport VoteChart from '../../vote/VoteChart';\r\nimport Comment from '../../comment/Comment';\r\nimport { fetchOne } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\n\r\nconst PersonGet = ({ match }) => {\r\n\r\n    const { personId } = match.params;\r\n    const[person, setPerson ] = useState(null);\r\n    const[loading, setLoading ] = useState(false);\r\n    const[error, setError ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(!loading && !error){\r\n            const url = \"/api/v1/person/get/\" + personId;\r\n            fetchOne(url, setPerson,setError,setLoading);\r\n        }\r\n    }, []);\r\n\r\n    const element = (\r\n        <div className = \"personGet\">\r\n            <GetHead \r\n                item = {person}\r\n                type = 'person'\r\n            />\r\n            <VoteChart />\r\n            <Comment type = 'person' id = {personId}/> \r\n        </div>\r\n    )\r\n\r\n    return renderAfterApiCall(person, error,loading, element);\r\n}\r\n\r\nexport default React.memo(PersonGet);","import React, { useEffect, useState } from 'react';\r\nimport ItemCardGroup from '../../common/item/ItemCardGroup';\r\nimport ListHead from '../../common/list/ListHead';\r\nimport ListFoot from '../../common/list/ListFoot';\r\nimport { fetchItems } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\nimport { createListUrlWithQuery } from '../../modules/urlGenerator';\r\nimport { extractProperties } from '../../modules/queryExtractor';\r\n\r\nfunction JobList({ location }){\r\n\r\n    const [jobs, setJobs] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [extPage, size, sort , dir , filterBy, keyword] = extractProperties(location);\r\n    const [page, setPage] = useState(extPage);\r\n\r\n    useEffect(() => {\r\n        const url = createListUrlWithQuery(location.search, '/api/v1/job/list');\r\n        fetchItems(url, 'job', setJobs, setError, setLoading);\r\n    }, [page]);\r\n\r\n    const element = (\r\n        <div className = \"jobList\" >\r\n                <ListHead \r\n                    type = 'job'\r\n                    sort = {sort}\r\n                    dir = {dir}\r\n                    keyword = {keyword}/>\r\n                <ItemCardGroup type = \"job\" itemList = {jobs} />\r\n                <ListFoot \r\n                    setPage = {setPage}\r\n                    curr = {page}\r\n                    size = {size}\r\n                    type = 'job' />\r\n        </div>\r\n        );\r\n\r\n    return renderAfterApiCall(jobs, error, loading, element);\r\n}\r\n\r\n\r\n\r\nexport default JobList;","import React, { useEffect, useState } from 'react';\r\nimport GetHead from '../../common/get/GetHead';\r\nimport VoteChart from '../../vote/VoteChart';\r\nimport Comment from '../../comment/Comment';\r\nimport { fetchOne } from '../../modules/apiCaller';\r\nimport { renderAfterApiCall } from '../../modules/renderHelper';\r\n\r\nconst JobGet = ({ match }) => {\r\n\r\n    const jobId = match.params.jobId;\r\n    const [job, setJob] = useState(null);\r\n    const [loading, setLoading] = useState(null);\r\n    const [error, setError ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const url = \"/api/v1/job/get/\" + jobId;\r\n        fetchOne(url, setJob, setError , setLoading);\r\n    }, []);\r\n\r\n    const element = (\r\n        <div className = \"jobGet\">\r\n            <GetHead \r\n                item = {job}\r\n                type = 'job'\r\n            />\r\n            <VoteChart />\r\n            <Comment type = 'job' id = {jobId} /> \r\n        </div>\r\n    )\r\n    return renderAfterApiCall(job, error, loading, element);\r\n}\r\n\r\nexport default React.memo(JobGet);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { deleteFile } from '../../modules/apiCaller';\r\n\r\nconst ImageForm = ({ form ,setForm }) => {\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const image = form['filename'];\r\n\r\n    const upload = async (file) => {\r\n        try {\r\n            setError(null);\r\n            setLoading(true);\r\n\r\n            let formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            const response = await axios.post(\"/api/v1/file/upload\", formData, {\r\n                headers : {\r\n                    \"Content-Type\" : \"multipart/form-data\",\r\n                }\r\n            });\r\n            \r\n            const filename = response.data['fullName'];\r\n            setForm({\r\n                ...form,\r\n                filename : filename,\r\n            })\r\n\r\n        } catch(e){\r\n            setError(e);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleImage = e => {\r\n        const file = e.target.files[0]\r\n        if(!file||!file.name) {\r\n            return;\r\n        }\r\n        upload(file);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if(image) {\r\n            deleteFile(image);\r\n            setForm({\r\n                ...form,\r\n                filename : '',\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <label className=\"btn btn-secondary\"\r\n                style = {{ \r\n                    color : \"white\",\r\n                    textAlign : \"center\"}}>\r\n                    <input \r\n                    type =\"file\"\r\n                    accept = \"image/*\" \r\n                    style = {{ display : \"none\", cursor : \"pointer\"}}\r\n                onChange = {handleImage}\r\n                onClick = {handleClick}\r\n                />\r\n                이미지 업로드 \r\n            </label>\r\n            <span style = {{ color : \"black\", fontSize: \"13px\" }}>\r\n                {image ? image : \" 이미지를 업로드하세요.\"}\r\n            </span>\r\n            <p style = {{ color : \"red\", fontSize: \"11px\" }}>\r\n                {error ? \" 업로드에 실패했습니다. 에러 : \" + error : \"\"}\r\n            </p>\r\n            <p style = {{ color : \"green\", fontSize: \"11px\" }}>\r\n                {loading ?  \"업로드중...\" : \"\"}\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(ImageForm);","import React, { useState, useEffect} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { fetchItems } from '../../modules/apiCaller';\r\n\r\nconst CategoryList = () => {\r\n\r\n    const [categories, setCategories] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect( () => {\r\n        const url = \"/api/v1/category/list\";\r\n        fetchItems(url, 'category', setCategories, setError, setLoading);\r\n    }, []);\r\n\r\n    if(error){  \r\n        return <p>에러 발생</p>\r\n    }\r\n    if(loading){\r\n        return <p>로딩중..</p>\r\n    }\r\n    if(!categories){\r\n        return <p>아무것도 없습니다.</p>\r\n    }\r\n    return (\r\n        <Form.Select name = \"categoryId\">\r\n            <option>카테고리를 선택하세요.</option>\r\n            {categories.map(category => \r\n            <option key = {category.id} value = {category.id}> {category.name} </option>)}\r\n        </Form.Select>\r\n    )\r\n}\r\n\r\nexport default CategoryList;","\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ExistsWarning = ({ url, form ,setForm }) => {\r\n\r\n    const [exists, setExists] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            const response = await axios.get(url);\r\n            const isExists = response.data;\r\n            setExists(isExists);\r\n            if(isExists){\r\n                setForm({\r\n                    ...form,\r\n                    name : '',\r\n                })\r\n            }\r\n        }\r\n        fetch();\r\n    }, [url])\r\n    \r\n    return (\r\n        <span \r\n        style = {{ color : 'red', fontSize : '11px', padding: '0', margin : '0'}}>\r\n             { exists ? \"이미 존재하는 이름입니다.\" : ''} \r\n        </span>\r\n    )\r\n}\r\n\r\nexport default ExistsWarning;\r\n","import React from 'react';\r\n\r\nconst TextTooLongWarning = ({ name }) => {\r\n    if(name && (name.length > 15) ){\r\n     return <span style = {{ color : 'red', fontSize : '11px'}}>\r\n                15자 이하로 적어주세요.\r\n            </span>\r\n    } else {\r\n        console.log(name);\r\n        return <></>;\r\n    }\r\n    \r\n}\r\n\r\nexport default TextTooLongWarning;","import React, { useContext, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ImageForm from '../../common/register/ImageForm';\r\nimport CategoryList from '../../category/list/CategoryList';\r\nimport ExistsWarning from '../../common/register/ExistsWarning';\r\nimport TextTooLongWarning from '../../common/register/TextTooLongWarning';\r\n    \r\nconst PersonRegisterForm = ( {form, setForm , handleChange, handleSubmit} ) => \r\n{      \r\n    const [name, setName] = useState(null);\r\n    const [desc , setDesc] = useState(null);\r\n\r\n    const onBlur = e => {\r\n        const name = e.target.value;\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleDescChange = e => {\r\n        const desc = e.target.value;\r\n        setDesc(desc);\r\n    }\r\n\r\n    return (\r\n        <div className = \"register\">\r\n            <h1>인물 등록</h1>\r\n            <Form onChange = {handleChange}>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name = \"name\"\r\n                        placeholder = \"인물 이름을 입력하세요\"\r\n                       onBlur = {onBlur}\r\n                        />\r\n                <ExistsWarning\r\n                    url = {\"/api/v1/person/exists/\" + name}\r\n                    form = {form}\r\n                    setForm = {setForm} />\r\n                <TextTooLongWarning name = {name}/>\r\n                </Form.Group>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                    name = \"writer\"\r\n                    type=\"text\"\r\n                    placeholder = \"작성자를 입력하세요.\" />\r\n                </Form.Group>\r\n                <Form.Group className = \"mb-3\">\r\n                    <ImageForm form = {form} setForm = {setForm} /> \r\n                </Form.Group>\r\n                <Form.Group className =\"mb-3\">\r\n                    <Form.Select name = \"gender\">\r\n                        <option>성별을 선택하세요.</option>\r\n                        <option value =\"MALE\">남</option>\r\n                        <option value = \"FEMALE\">여</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className =\"mb-3\">\r\n                    <CategoryList />\r\n                </Form.Group>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                    name = \"description\"\r\n                    type=\"text\"\r\n                    placeholder = \"설명을 입력하세요.\"\r\n                    onChange = {handleDescChange} />\r\n                </Form.Group>\r\n                <TextTooLongWarning name = {desc} />\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                        name =\"password\"\r\n                        type=\"password\"\r\n                        placeholder = \"비밀번호를 입력하세요.\" />\r\n                </Form.Group>\r\n            </Form>\r\n            <div className = \"register-button\">\r\n                <Button variant = \"primary\" onClick = {handleSubmit}>인물 등록</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(PersonRegisterForm);","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ImageForm from '../../common/register/ImageForm';\r\nimport ExistsWarning from '../../common/register/ExistsWarning';\r\nimport TextTooLongWarning from '../../common/register/TextTooLongWarning';\r\n\r\nconst JobRegisterForm = ( { form , setForm , handleSubmit, handleChange } ) => {\r\n\r\n    const [name, setName] = useState(null);\r\n    \r\n    const onBlur = e => {\r\n        console.log(e.target.value);\r\n        setName(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div className = \"register\">\r\n            <h1>직업 등록</h1>\r\n            <Form onChange = {handleChange}>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name = \"title\"\r\n                        placeholder = {\"직업 이름을 입력하세요.\"} \r\n                        onBlur = {onBlur}/>\r\n                    <ExistsWarning \r\n                        url = {\"/api/v1/job/exists/\" + name}\r\n                        form = {form}\r\n                        setForm = {setForm}\r\n                    />\r\n                    <TextTooLongWarning name = {name} />\r\n                </Form.Group>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name =\"writer\"\r\n                        placeholder = \"작성자를 입력하세요.\" />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <ImageForm form = {form} setForm = {setForm} />\r\n                </Form.Group>\r\n                <Form.Group className = \"mb-3\">\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        name =\"password\"\r\n                        placeholder = \"비밀번호를 입력하세요.\" />\r\n                </Form.Group>\r\n            </Form>\r\n            <div className = \"register-button\">\r\n                <Button variant = \"primary\" onClick = {handleSubmit}> 등록</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobRegisterForm;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FillAllModal = ({ show, setShow}) => (\r\n    <Modal show = {show}>\r\n        <Modal.Body>모두 입력해주세요!</Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant = \"primary\" onClick = {() => setShow(false)}>닫기</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n)\r\n\r\nexport default FillAllModal;","import React, { useState } from 'react';\r\nimport PersonRegisterForm from '../../person/register/PersonRegisterForm'\r\nimport JobRegisterForm from '../../job/register/JobRegisterForm';\r\nimport SuccessModal from '../../modal/register/SuccessModal';\r\nimport LoadingModal from '../../modal/register/LoadingModal';\r\nimport ErrorModal from '../../modal/register/ErrorModal';\r\nimport FillAllModal from '../../modal/warning/FillAllModal';\r\nimport { postOne } from '../../modules/apiCaller';\r\n\r\nimport './Register.css';\r\n\r\nconst getInitialState = (type) => {\r\n\r\n\r\n    let initialState;\r\n    \r\n    if(type == 'person'){\r\n        initialState =\r\n            {\r\n                name : '',\r\n                writer : '',\r\n                gender : '',\r\n                categoryId : '',\r\n                description : '',\r\n                password : '',  \r\n                filename : '',\r\n            };\r\n    } else if(type == 'job'){\r\n        initialState = \r\n            {\r\n                title : '',\r\n                writer : '',\r\n                password : '',\r\n                filename : '',\r\n            };\r\n    } else {\r\n        throw new Error('type 이 맞지 않습니다. type : ' + type);\r\n    }\r\n\r\n    return initialState;\r\n}\r\n\r\n// type : person 또는 job\r\nconst Register = ({ match }) => {\r\n    const type = match.params.type\r\n    const [form, setForm] = useState(getInitialState(type));\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [notFilled, setNotFilled] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setForm({\r\n            ...form,\r\n            [name] : value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(type === 'person'){\r\n            if(!form.name || !form.writer || !form.gender || !form.categoryId || !form.description || !form.password || !form.filename){\r\n                setNotFilled(true);\r\n                return ;\r\n            }\r\n        }\r\n        if(type === 'job'){\r\n            if(!form.title || !form.writer || !form.password || !form.filename){\r\n                setNotFilled(true);\r\n                return ;\r\n            }\r\n        }\r\n        const url = \"/api/v1/\" + type +\"/register\";\r\n        postOne(url, form, setSuccess, setError, setLoading);\r\n    }\r\n        \r\n    return (\r\n        <>\r\n        {type === 'person' ?\r\n\r\n            <PersonRegisterForm \r\n            form = {form}\r\n            setForm = {setForm}\r\n            handleChange = {handleChange}\r\n            handleSubmit = {handleSubmit}/> \r\n            : \r\n            <JobRegisterForm\r\n            form = {form}\r\n            setForm = {setForm}\r\n            handleChange = {handleChange}\r\n            handleSubmit = {handleSubmit}/>}\r\n\r\n        <SuccessModal\r\n                suffix = '등록'\r\n                show = {success}\r\n                setShow = {setSuccess}/>\r\n         \r\n        <LoadingModal\r\n            suffix = '등록'\r\n            show = {loading}/>\r\n\r\n        <ErrorModal \r\n            msg = {error}\r\n            show = {error}\r\n            setShow = {setError} /> \r\n\r\n        <FillAllModal \r\n            show = {notFilled}\r\n            setShow = {setNotFilled}/>\r\n            \r\n        </>\r\n    );\r\n        \r\n}\r\nexport default React.memo(Register);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Main from '../main/Main';\r\n\r\nimport MbtiList from '../mbti/list/MbtiList';\r\nimport MbtiGet from '../mbti/get/MbtiGet';\r\n\r\nimport PersonList from '../person/list/PersonList';\r\nimport PersonGet from '../person/get/PersonGet';\r\n\r\nimport JobList from '../job/list/JobList';\r\nimport JobGet from '../job/get/JobGet';\r\n\r\nimport Register from './register/Register';\r\nimport { NotFound404 } from '../modules/renderHelper';\r\n\r\nconst RouteContainer = () => {\r\n    return (\r\n        <>\r\n        <Switch>\r\n            <Route exact path = \"/\" component = {Main}/>\r\n            <Route path = \"/mbti/list\" component = {MbtiList}/>\r\n            <Route path = \"/mbti/get/:name\" component = {MbtiGet} />\r\n            \r\n            <Route path = \"/person/list\" component = {PersonList} />\r\n            <Route path = \"/person/get/:personId\" component = {PersonGet}/>\r\n\r\n            <Route path = \"/job/list\" component = {JobList} />\r\n            <Route path = \"/job/get/:jobId\" component = {JobGet} />\r\n            \r\n            <Route path = \"/:type/register\" component = {Register} />\r\n            <Route component = {NotFound404} />\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RouteContainer;","import React from 'react';\r\nimport Header from './header/Header';\r\nimport Footer from './footer/Footer';\r\nimport RouteContainer from '../common/RouteConatiner';\r\n\r\nconst Layout = () => {\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header/>\r\n                <RouteContainer />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { setChildren } from '../modules/LayoutModule';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport Layout from './Layout';\r\n\r\nconst LayoutContainer = () => {\r\n\r\n    const { children } = useSelector(state => ({\r\n        children : state.layout.children,\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const onLogoClick = children => dispatch(setChildren(children));\r\n\r\n    return (\r\n            <Layout \r\n                children = {children}\r\n                onLogoClick = {onLogoClick}/>\r\n    )\r\n}\r\n\r\nexport default LayoutContainer;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport LayoutContainer from './layout/LayoutContainer';\n\nimport { ContextProvider} from './context/ContextContainer';\n\nfunction App(){\n  return (\n      <ContextProvider>\n        <BrowserRouter>\n            <LayoutContainer />\n        </BrowserRouter>\n      </ContextProvider>\n  ) \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport layout from \"./LayoutModule\";\r\nconst rootReducer = combineReducers({ layout });\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './modules/modules'\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}